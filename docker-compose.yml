services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ip_locations_db
      POSTGRES_USER: ip_user
      POSTGRES_PASSWORD: ip_password
    volumes:
      - ip_location_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ip_user -d ip_locations_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 412M

  # API Service
  api:
    build:
      context: ./api/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DATABASE_URL: "postgresql://ip_user:ip_password@db:5432/ip_locations_db"
      REDIS_URL: "redis://redis:6379"
      LOG_LEVEL: "INFO"
    volumes:
      - .:/home/appuser/app
    restart: unless-stopped
    command: ["/bin/sh", "-c", "cd /home/appuser/app/api && mkdir -p build && cd build && cmake .. && make -j$(nproc) && ./ip_location_service"]
    deploy:
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M

  # Data Updater with Scheduler for initial load and daily updates
  data-updater:
    build:
      context: ./data-updater
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data-updater/scripts:/app/scripts
    command: ["/bin/sh", "-c", "python /app/scripts/update_data.py --run-now && python /app/scripts/update_data.py --schedule"]
    environment:
      DB_HOST: db
      DB_NAME: ip_locations_db
      DB_USER: ip_user
      DB_PASSWORD: ip_password
      DB_PORT: 5432
      LOG_LEVEL: "INFO"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M

volumes:
  ip_location_data: